initSidebarItems({"enum":[["FontFamily","Describes font family. This can be either a specific font family name, such as “arial”, or a general font family class, such as “serif” and “sans-serif”"],["FontStyle","Describes the font style. Such as Italic, Oblique, etc."],["FontTransform","Specifying text transformations"],["LabelAreaPosition","Specifies one of the four label positions around the figure."],["NestedValue","Describe a value for a nested coordinate"],["SegmentValue","The value that used by the segmented coordinate."],["SeriesLabelPosition","Useful to specify the position of the series label."]],"fn":[["make_partial_axis","Make a partial axis based on the percentage of visible portion. We can use `into_partial_axis` to create a partial axis range specification. But sometimes, we want to directly specify the percentage visible to the user."]],"struct":[["AreaSeries","An area series is similar to a line series but uses a filled polygon. It takes an iterator of data points in guest coordinate system and creates appropriate lines and points with the given style."],["Cartesian2d","A 2D Cartesian coordinate system described by two 1D ranged coordinate specs."],["ChartBuilder","The helper object to create a chart context, which is used for the high-level figure drawing."],["ChartContext","The context of the chart. This is the core object of Plotters."],["Circle","A circle element"],["Cross","A cross marker for visualizing data series."],["Cubiod","Represents a cuboid, a six-faced solid."],["DynElement","The container for a dynamically dispatched element"],["EmptyElement","An empty composable element. This is the starting point of a composed element."],["FontDesc","Describes a font"],["GroupBy","Grouping the value in the coordinate specification."],["HSLColor","The color described by HSL color space"],["LineSeries","The line series object, which takes an iterator of data points in guest coordinate system and creates appropriate lines and points with the given style."],["Linspace","The coordinate combinator that transform a continous coordinate to a discrete coordinate to a discrete coordinate by a giving step."],["LogCoord","A log scaled coordinate axis"],["LogRange","The logarithmic coodinate decorator. This decorator is used to make the axis rendered as logarithmically."],["MultiLineText","An multi-line text element. The `Text` element allows only single line text and the `MultiLineText` supports drawing multiple lines"],["NestedRange","A nested coordinate spec which is a discrete coordinate on the top level and for each value in discrete value, there is a secondary coordinate system. And the value is defined as a tuple of primary coordinate value and secondary coordinate value"],["Palette100","The palette of 100% accessibility"],["Palette99","The palette of 99% accessibility"],["Palette9999","The palette of 99.99% accessibility"],["PaletteColor","A color in the given palette"],["PathElement","An element of a series of connected lines"],["Pie","A Pie Graph"],["Pixel","An element representing a single pixel."],["Polygon","An element of a filled polygon"],["Quartiles","The quartiles"],["RGBAColor","The RGBA representation of the color, Plotters use RGBA as the internal representation of color"],["RGBColor","The color described by its RGB value"],["Rectangle","A rectangle element"],["SVGBackend","The SVG image drawing backend"],["ShapeStyle","Style for any shape"],["Text","A single line text element. This can be owned or borrowed string, dependents on `String` or `str` moved into."],["TextStyle","Style of a text"],["TriangleMarker","A triangle marker for visualizing data series."]],"trait":[["AsRelative","Allows a value turns into a relative size"],["BindKeyPointMethod","Bind an existing coordinate spec with a given key points algorithm. See WithKeyPointMethod for more details."],["BindKeyPoints","Bind a existing coordinate spec with a given key points vector. See WithKeyPoints for more details."],["BuildNestedCoord","Used to build a nested coordinate system."],["Color","Any color representation"],["CoordTranslate","The trait that translates some customized object to the backend coordinate"],["DiscreteRanged","The trait indicates the coordinate is discrete This means we can bidirectionally map the range value to 0 to N in which N is the number of distinct values of the range."],["DrawingBackend","The drawing backend trait, which implements the low-level drawing APIs. This trait has a set of default implementation. And the minimal requirement of implementing a drawing backend is implementing the `draw_pixel` function."],["IntoDynElement","The trait that makes the conversion from the statically dispatched element to the dynamically dispatched element"],["IntoFont","The trait that allows some type turns into a font description"],["IntoLinspace","Makes a linspace coordinate from the ranged coordinates."],["IntoLogRange","Convert a range to a log scale coordinate spec"],["IntoPartialAxis","The trait for the types that can be converted into a partial axis"],["IntoSegmentedCoord","The trait for types that can decorated by SegmentedCoord decorator."],["IntoTextStyle","Trait for values that can be converted into `TextStyle` values"],["LogScalable","The trait for the type that is able to be presented in the log scale. This trait is primarily used by LogRangeExt."],["Palette","Represents a color palette"],["ToGroupByRange","The trait that provides method `Self::group_by` function which creates a `GroupBy` decorated ranged value."]],"type":[["DrawResult","The type used to returns a drawing operation that can be failed"]]});